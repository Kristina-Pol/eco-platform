# ЭкоПлатформа

ЭкоПлатформа — это веб-приложение для учета переработки отходов и отслеживания экологического вклада пользователей. Пользователи могут регистрироваться, добавлять отчеты о сданных отходах, просматривать статистику и получать достижения на основе накопленных эко-баллов. Приложение включает серверную часть на Node.js с базой данных SQLite и клиентскую часть с HTML, CSS и JavaScript.

## Особенности

- Регистрация и авторизация пользователей
- Просмотр списка пунктов приема отходов
- Добавление отчетов о сданных отходах (пластик, бумага, стекло)
- Отображение статистики пользователя (эко-баллы, объем сданных отходов)
- Система достижений (Эко-Новичок, Эко-Активист, Эко-Герой)
- Адаптивный дизайн с модальным окном для авторизации
- Интеграция с Telegram-ботом (ссылка в футере)
- Поиск пунктов приема (реализован в отдельной странице)

## Технологии

- **Backend**: Node.js, Express.js, SQLite3
- **Frontend**: HTML, CSS, JavaScript
- **Стилизация**: Пользовательский CSS с адаптивным дизайном
- **Дополнительно**: CORS для кросс-доменных запросов, LocalStorage для хранения данных авторизации

## Установка и запуск

### Предварительные требования

- Node.js (версия 14 или выше)
- npm (устанавливается вместе с Node.js)
- SQLite3 (должен быть установлен или доступен через npm)

### Инструкции

1. **Клонируйте репозиторий**:

   ```bash
   git clone https://github.com/your-username/eco-platform.git
   cd eco-platform
   ```

2. **Установите зависимости**:

   ```bash
   npm install
   ```

3. **Запустите сервер**:

   ```bash
   node server.js
   ```

4. **Откройте приложение**:

   - Перейдите по адресу `http://localhost:3000` в браузере.
   - Используйте `index.html` как главную страницу приложения.

5. **Дополнительно**:

   - Для использования Telegram-бота настройте соответствующий бот в Telegram и замените ссылку в `index.html` на актуальную.
   - Убедитесь, что файл `лого.jpg` (используемый для фона) и `icon.png` (иконка Telegram) находятся в корневой директории или замените их на свои изображения.

## Структура проекта

```
eco-platform/
├── server.js               # Основной серверный файл (Node.js + Express)
├── index.html              # Главная страница приложения
├── search.html             # Страница поиска пунктов приема
├── styles.css              # Стили для фронтенда
├── лого.jpg                # Фоновое изображение для header и footer
├── icon.png                # Иконка Telegram
├── waste_management.db     # База данных SQLite (создается автоматически)
├── README.md               # Этот файл
└── package.json            # Зависимости и скрипты проекта
```

## Использование

1. **Авторизация**:

   - При первом входе введите имя пользователя в модальном окне.
   - Данные сохраняются в LocalStorage для последующих входов.

2. **Основные функции**:

   - Просмотрите список пунктов приема в разделе "Список пунктов приема".
   - Добавьте отчет о сданных отходах в разделе "Добавить отчет", указав тип отходов, вес и пункт приема.
   - Отслеживайте свои эко-баллы и статистику в разделе "Ваш экологический вклад".
   - Проверьте свои достижения в разделе "Достижения".

3. **Поиск**:

   - Перейдите на страницу `search.html` для поиска пунктов приема по названию.

## API

Сервер предоставляет следующие эндпоинты:

- `POST /api/users` — Регистрация пользователя
- `GET /api/users/by-username/:username` — Получение user_id по имени
- `GET /api/recycling_points` — Получение списка пунктов приема
- `POST /api/recycling_points` — Добавление нового пункта приема
- `GET /api/users/:user_id/stats` — Получение статистики пользователя
- `POST /api/reports` — Добавление отчета об отходах
- `GET /api/users/:user_id/achievements` — Получение достижений пользователя
- `GET /search?query=<query>` — Поиск пунктов приема по названию

## Замечания

- **Безопасность**: Текущая версия содержит уязвимый поисковый запрос в `server.js` (SQL-инъекция). Это сделано для учебных целей. В продакшене используйте параметризованные запросы.
- **Лог-файл**: База данных SQLite (`waste_management.db`) создается автоматически при первом запуске.
- **Изображения**: Убедитесь, что файлы `лого.jpg` и `icon.png` доступны, или замените их в коде.

## Лицензия

MIT License. См. файл `LICENSE` для подробностей (если добавлен в репозиторий).

## Контакты

Для вопросов или предложений:

- Telegram: ЭкоПлатформа
- GitHub: your-username